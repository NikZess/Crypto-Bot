from sqlalchemy.ext.asyncio import AsyncSession
from database.engine import session_maker
from database.orm_query import orm_get_user_currency

async def init_descriptions(user_id: int, language: str = "ru"):
    async with session_maker() as session:
        user_settings_currency = await orm_get_user_currency(session, user_id=user_id) or "USD"  # –ï—Å–ª–∏ None, —Å—Ç–∞–≤–∏–º USD

    description_for_info_pages = {
        "ru": {
            "main_menu": "–ü—Ä–∏–≤–µ—Ç üñêÔ∏è! <strong>–≠—Ç–æ –ö—Ä–∏–ø—Ç–æ-–ë–æ—Ç ü§ñ</strong>, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å "
                         "–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç —Å —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –±–∏—Ä–∂ üí≤. \n\n–ë–∏—Ä–∂—É —Å –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–æ–∂–Ω–æ "
                         "–∏–∑–º–µ–Ω–∏—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö ‚öôÔ∏è.\n\n–í—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –Ω–∏–∂–µ üòâ",

            "settings": "<strong>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞</strong>\n\n"
                        "–í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –≤—ã —Å–∞–º–∏ –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –±–∏—Ä–∂—É –¥–ª—è –±–æ—Ç–∞: <strong>ByBit, Binance, BingX, OKX</strong>\n\n"
                        "–ù–∞ —Ä–∞–∑–Ω—ã—Ö –±–∏—Ä–∂–∞—Ö –º–æ–≥—É—Ç –±—ã—Ç—å —Ä–∞–∑–Ω—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç. –í –±–æ—Ç–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è API –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–∏—Ä–∂.\n\n"
                        "–í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —è–∑—ã–∫–∞ –º–æ–∂–Ω–æ —Å–º–µ–Ω–∏—Ç—å —è–∑—ã–∫: –†—É—Å—Å–∫–∏–π/–ê–Ω–≥–ª–∏–π—Å–∫–∏–π.",

            "about_menu": "<strong>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ</strong>\n\n"
                          "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω–æ–≥–æ –∫—Ä–∏–ø—Ç–æ-–±–æ—Ç–∞ - 1 —á–µ–ª–æ–≤–µ–∫. \n"
                          "–°—É—Ç—å –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ ‚Äî –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç —Å —Ä–∞–∑–Ω—ã—Ö –±–∏—Ä–∂ –∏ –±—ã—Ç—å —É–¥–æ–±–Ω—ã–º.\n\n"
                          "–§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞: \n\n"
                          "<strong>‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç \n"
                          "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∏—Ä–∂–∏ \n"
                          "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —è–∑—ã–∫–∞ –±–æ—Ç–∞ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ) \n"
                          "‚Ä¢ –ê–ª–≥–æ—Ä–∏—Ç–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ–∫—É–ø–∫–∏ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)</strong>",

            "prices_menu": "<strong>–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç</strong>",

            "settings_menu_currency": f"<strong>–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞–ª—é—Ç—ã –±–æ—Ç–∞</strong>\n\n"
                                       f"–í—ã–±—Ä–∞–Ω–Ω–∞—è –≤–∞–ª—é—Ç–∞: {user_settings_currency}"
        },

        "en": {
            "main_menu": "Hi üñêÔ∏è! <strong>This is a Crypto Bot ü§ñ</strong>, that will help you find out the exchange rate of "
                         "cryptocurrencies from various exchanges üí≤. \n\nYou can change the exchange in the settings ‚öôÔ∏è.\n\n"
                         "All information about us can be found below üòâ",

            "settings": "<strong>Bot settings</strong>\n\n"
                        "You can choose the exchange for the bot: <strong>ByBit, Binance, BingX, OKX</strong>\n\n"
                        "There may be different exchange rates on these exchanges. The bot uses the APIs of all available exchanges.\n\n"
                        "You can change the language to Russian/English in the settings.",

            "about_menu": "<strong>Information about the bot</strong>\n\n"
                          "The developer of this crypto bot is 1 person.\n"
                          "The bot helps track exchange rates from different exchanges and is easy to use.\n\n"
                          "Bot features: \n\n"
                          "<strong>‚Ä¢ Viewing exchange rates \n"
                          "‚Ä¢ Configuring the exchange \n"
                          "‚Ä¢ Configuring the bot language (under development) \n"
                          "‚Ä¢ Recommendation algorithm (under development)</strong>",

            "prices_menu": "<strong>Exchange rates</strong>",

            "settings_menu_currency": f"<strong>Bot currency settings</strong>\n\n"
                                       f"Selected currency: {user_settings_currency}"
        }
    }

    return description_for_info_pages.get(language, description_for_info_pages["ru"])
